---
# This file handles installing Forgejo runner using the official binary release.
# This includes
# * installing dependencies using the package manager
# * getting the latest version
# * downloading the binary
# * validating the signature
# * installing the binary to the correct path
# * creating the necessary system user account
# * installing a systemd service file/OpenRC init script

- name: 'Install gnupg'
  ansible.builtin.package:
    name: "{{ forgejo_runner_gnupg_package }}"
    state: present

- name: 'Determine Forgejo runner version to install'
  when: "forgejo_runner_version is not defined"
  block:
    - name: 'Get Forgejo runner latest release information'
      ansible.builtin.uri:
        url: "{{ forgejo_runner_version_url }}"
        return_content: true
      check_mode: false
      register: _forgejo_runner_latest

    - name: 'Parse release information'
      ansible.builtin.set_fact:
        forgejo_runner_version: "{{ _forgejo_runner_latest.json.name.removeprefix('v') }}"

- name: 'Get currently installed version of Forgejo runner'
  ansible.builtin.command: '/usr/local/bin/forgejo-runner --version'
  check_mode: false
  changed_when: false
  ignore_errors: true
  register: _forgejo_runner_version

- name: 'Determine version number'
  ansible.builtin.set_fact:
    _current_forgejo_runner_version: "{{ _forgejo_runner_version.stdout | default('') | ansible.builtin.regex_search('(?<=forgejo-runner version v)[0-9.]+(-rc[0-9]+)?$', ignorecase=true) }}"

- name: "Download and install Forgejo runner {{ forgejo_runner_version }}"
  when: "forgejo_runner_version != _current_forgejo_runner_version"
  block:

    - name: 'Create temporary directory'
      ansible.builtin.tempfile:
        state: directory
      diff: false
      register: _tmpdir
      notify: forgejo_runner_remove_tmpdir

    - name: 'Determine file name'
      ansible.builtin.set_fact:
        _filename: "forgejo-runner-{{ forgejo_runner_version }}-linux-{{ forgejo_runner_arch }}"

    - name: 'Download Forgejo runner'
      ansible.builtin.get_url:
        url: "{{ forgejo_runner_base_url.rstrip('/') }}/v{{ forgejo_runner_version }}/{{ filename }}"
        dest: "{{ _tmpdir.path }}"
        mode: '0755'
      loop:
        - "{{ _filename }}"
        - "{{ _filename }}.asc"
      loop_control:
        loop_var: filename
      when: "_tmpdir is not skipped"

    - name: 'Create temporary GnuPG directory'
      ansible.builtin.file:
        path: "{{ _tmpdir.path }}/.gnupg"
        state: directory
        owner: root
        group: root
        mode: '0700'
      diff: false
      when: "_tmpdir is not skipped"

    - name: 'Get the PGP keys'
      ansible.builtin.command: >
        gpg
        --keyserver hkps://keys.openpgp.org
        --no-default-keyring
        --keyring trustedkeys.kbx
        --recv-key {{ forgejo_runner_pgp_fingerprint | ansible.builtin.quote }}
      environment:
        GNUPGHOME: "{{ _tmpdir.path }}/.gnupg"
      register: _gpg_recv_key
      changed_when: "_gpg_recv_key is not failed and 'imported:' in _gpg_recv_key.stderr"
      when: "_tmpdir is not skipped"

    - name: 'Verify signature'
      ansible.builtin.command: "gpgv '{{ _tmpdir.path }}/{{ _filename }}.asc' '{{ _tmpdir.path }}/{{ _filename }}'"
      environment:
        GNUPGHOME: "{{ _tmpdir.path }}/.gnupg"
      changed_when: false
      when: "_tmpdir is not skipped"

    - name: 'Install Forgejo runner'
      ansible.builtin.copy:
        dest: '/usr/local/bin/forgejo-runner'
        src: "{{ _tmpdir.path }}/{{ _filename }}"
        remote_src: true
        owner: root
        group: root
        mode: '0755'
      notify: forgejo_runner_restart
      when: "_tmpdir is not skipped"

- name: 'Create Forgejo runner system user group'
  ansible.builtin.group:
    name: "{{ forgejo_runner_group }}"
    system: true
    state: present

- name: 'Create Forgejo runner system user account'
  ansible.builtin.user:
    name: "{{ forgejo_runner_user }}"
    password: '*'
    group: "{{ forgejo_runner_group }}"
    home: "{{ forgejo_runner_data_path }}"
    comment: 'Forgejo runner service account'
    shell: '/sbin/nologin'
    system: true
    state: present

- name: 'Install systemd service file'
  ansible.builtin.template:
    dest: '/etc/systemd/system/forgejo-runner.service'
    src: forgejo-runner.service.j2
    owner: root
    group: root
    mode: '0644'
  when: "ansible_facts['service_mgr'] == 'systemd'"
  notify: forgejo_runner_reload_service_files

- name: 'Install OpenRC init script'
  ansible.builtin.template:
    dest: '/etc/init.d/forgejo-runner'
    src: forgejo-runner.openrc.j2
    owner: root
    group: root
    mode: '0755'
  when: "ansible_facts['service_mgr'] == 'openrc'"
